#!/bin/bash

[[ -z "$1" ]] && { echo "No se ha ingresado ningun parametro (ruta)."; exit 1; }
PROJPATH="${1%/}" #remove last slash if any
PROJECT_NAME=$( basename "$PROJPATH" )

shift

NO_INTERACTIVE=""
REPROCESS=""
PROFILE_FROM_PARAM="1"

while [ $# -ne 0 ]
  do
    arg="$1"
    case "$arg" in
        no-interactive)
            NO_INTERACTIVE="Yes"
            ;;
        reprocess)
            REPROCESS="Yes"
            ;;
        profile=*)
            PROFILE_FROM_PARAM="${arg#*=}"
            ;;
    esac
    shift
  done  
  
echo "=== '$PROJECT_NAME' ==="
echo ""

SCRIPT="/opt/src/fcen-tesis/fcen-postprocessing/scripts/profile-processor"
[[ -f "$SCRIPT" ]] && echo "profile-processor OK" || { echo "profile-processor FILE NOT FOUND"; exit 1;} 

# --- configuration

EVENPATH="$PROJPATH/pre/even"
ODDPATH="$PROJPATH/pre/odd"
ALLPATH="$PROJPATH/pre/all"

SOURCE="$ALLPATH"
DEST="$PROJPATH/done"
LOGPATH="$PROJPATH/done/.logs"
OUTPUT_NAME="output.pdf"

PREV_SC=""
PREV_OCR=""
PREV_PDFB=""

CREATE_SYMLINKS_IN_ALL_DIR="Yes"
PARAM="follow-symbolic-links"

EXT="jpg,JPG,tif,TIF,jpeg,JPEG,TIFF,tiff"

PROFILE_OPTIONS=''

# --- check directory tree structure

[[ -d "$PROJPATH" ]] || { echo "El directorio proporcionado no existe: '$PROJPATH'"; exit 1; }

MSG="La estructura de directorios encontrada es incorrecta. 
asegúrese de que está ejecutando esta acción sobre el directorio 
principal proyecto, y no sobre subdirectorios del mismo."

[[ -d "$EVENPATH" ]] || { echo "$MSG"; exit 1; }
[[ -d "$ODDPATH"  ]] || { echo "$MSG"; exit 1; }
[[ -d "$ALLPATH"  ]] || { echo "$MSG"; exit 1; }

# --- check prior execution

if [ -d "$DEST/.processing" ]
  then
    if find "$DEST/.processing" -maxdepth 1 -name "*.tif" | grep -q .
      then
        PREV_SC="Yes"
        echo "- Posibles archivos de un post-procesamiento previo detectados: Scantailor."
    fi
    if find "$DEST/.processing" -maxdepth 1 -name "*.html" | grep -q .
      then
        PREV_OCR="Yes"
        echo "- Posibles archivos de un post-procesamiento previo detectados: OCR."
    fi
    if find "$DEST/.processing" -maxdepth 1 -name "*.jbig2" | grep -q .
      then
        PREV_PDFB="Yes"
        echo "- Posibles archivos de un post-procesamiento previo detectados: PDFBeads."
        PARAM="follow-symbolic-links reoptimize-pdf"
    fi
fi

if [ "$NO_INTERACTIVE" != "Yes" ]
then
    if [ -f "$DEST/$OUTPUT_NAME" ]
      then
       echo ""
       echo "ATENCION: '$PROJECT_NAME' ya contiene un documento PDF probablemente"
       echo "producido durante un post-procesamiento anterior."
       echo ""
       echo "¿Cómo desea continuar?"
       echo "- Presione ENTER "
       echo "    para salir sin hacer nada."
       echo "- Presione '1' + ENTER"
       echo "    para repetir TODO el proceso completo de generación del PDF desde las"
       echo "    de capturas originales (post-procesado y realización de OCR)."
       if [ "$PREV_SC" == "Yes" ]; then
         echo "- Presione '2' + ENTER"
         echo "    para re-procesar SOLO el OCR (reconocimiento de caracteres), usando"
         echo "    el resto del material disponible para generar el PDF."
       fi
       if [ "$PREV_SC" == "Yes" ] && [ "$PREV_OCR" == "Yes" ]; then
         echo "- Presione '3' + ENTER"
         echo "    para volver a generar el PDF sin realizar nuevamente el post-procesado."

       fi

       echo "- Presione '0' + ENTER"
       echo "    para eliminar archivos producidos en post-procesados previos y salir"
       echo ""   
       read -p ">> " option
       case "$option" in
          "")
             exit 0
             ;;
          1)
             CREATE_SYMLINKS_IN_ALL_DIR="Forced" # solo evita que vuelva a preguntar que hacer mas adelante
             ;;
          2)
             if [ "$PREV_SC" == "Yes" ] 
             then 
               PARAM="no-scantailor"; 
               CREATE_SYMLINKS_IN_ALL_DIR="No"
               if [ "$PREV_PDFB" == "Yes" ]; then PARAM="$PARAM reoptimize-pdf"; fi
             else
               exit 0
             fi
             ;;
          3)
             if [ "$PREV_OCR" == "Yes" ] 
             then
               PARAM="compile-pdf-only"
               CREATE_SYMLINKS_IN_ALL_DIR="No"
               if [ "$PREV_PDFB" == "Yes" ]; then PARAM="$PARAM reoptimize-pdf"; fi
             else
               exit 0
             fi
             ;;
          0)
             PARAM="clear"
             CREATE_SYMLINKS_IN_ALL_DIR="Empty-only"
             ;;
          *)
             exit 0
             ;;
       esac
    fi
    
    echo "Seleccionar perfil de procesamiento"
    echo "- '1' + ENTER: blanco y negro (1bit)"
    echo "- '2' + ENTER: autodetectar imagenes en color o blanco y negro"
    echo "- '3' + ENTER: color o escala de grises"
    echo ""
    echo "- Presione ENTER "
    echo "    para salir sin hacer nada."
    read -p ">> " pr_option

else # NO-INTERACTIVE MODE
    if [ -f "$DEST/$OUTPUT_NAME" ]
     then
        if [ "$REPROCESS" != "Yes" ]
         then
            echo " Este proyecto ya fue post-procesado previamente '$PROJECT_NAME'!"
            echo " Para sobreescribir en modo no interactivo debe agregar el"
            echo " parametro 'reprocess' a las opciones del script."
            exit 0
        fi
    fi
    CREATE_SYMLINKS_IN_ALL_DIR="Forced"
    pr_option=$PROFILE_FROM_PARAM
fi


case "$pr_option" in
    "")
        exit 0
        ;;
    1)
        PROFILE_OPTIONS=''
        ;;
    2)
        PROFILE_OPTIONS=',q1'
        ;;
    2)
        PROFILE_OPTIONS=',q2'
        ;;
    *)
        exit 0
        ;;
esac

# --- create symbolic links in "all" dir

# find "$EVENPATH" -maxdepth 1 -type f -exec mv {} "$ALLPATH" \;
# find "$ODDPATH" -maxdepth 1 -type f -exec mv {} "$ALLPATH" \;

if [ "$CREATE_SYMLINKS_IN_ALL_DIR" != "No" ]
  then
   # delete symliks if any
   if find "$ALLPATH" -mindepth 1 -print -quit | grep -q .
    then
      if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ]
       then
         echo ""
         echo "ATENCION: '$PROJECT_NAME' contiene archivos de un post-procesamiento"
         echo "inconcluso realizado con anterioridad."
         echo ""
         echo "¿Cómo desea continuar?"
         echo "- Presione ENTER "
         echo "    para salir sin hacer nada."
         echo "- Presione '1' + ENTER"
         echo "    para generar el PDF sobreescribiendo lo anterior."
         echo ""
         
         read  -p ">> " option
         case "$option" in
            "")
                exit 0
                ;;
            1)
                # continue
                ;;
            *)
                exit 0
                ;;
         esac        
      fi

      if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Forced" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Empty-only" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ] # es posible que este if sea redundante
       then
         echo -n "Limpiando '$ALLPATH'.."
         find "$ALLPATH" -mindepth 1 -delete && echo "OK" || { echo "ERROR al intentar borrar symlinks de '$ALLPATH'"; exit 1; }
      fi
   else
      echo "directorio '$ALLPATH' vacío ..OK"
   fi
   #echo "debug: "; ls "$ALLPATH"; echo "-"
   
   if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Forced" ]
    then

      # create symlinks form 'odd' and 'even' in 'all'
      if find "$EVENPATH" -mindepth 1 -name "test.jpg" | grep -q .
       then
        rm "$EVENPATH/test.jpg" && echo "- se eliminó el archivo de prueba 'test.jpg' de '$EVENPATH'" || exit 1
      fi
      if find "$ODDPATH" -mindepth 1 -name "test.jpg" | grep -q .   
       then
        rm "$ODDPATH/test.jpg" && echo "- se eliminó el archivo de prueba 'test.jpg' de '$ODDPATH'" || exit 1
      fi

      echo -n "Creando symlinks en '$ALLPATH'.."         
      find "$EVENPATH" -maxdepth 1 -type f -exec ln -s {} "$ALLPATH" \; && echo -n "OK .." || { echo "ERROR al intentar crear symlinks desde '$EVENPATH'"; exit 1; }
      find "$ODDPATH" -maxdepth 1 -type f -exec ln -s {} "$ALLPATH" \; &&  echo " OK" || { echo "ERROR al intentar crear symlinks desde '$ODDPATH'"; exit 1; }

   fi  
fi

# --- profile-processor

[[ -d "$LOGPATH" ]] || { mkdir "$LOGPATH" || { echo "No se pudo crear '$LOGPATH'"; exit 1; } }

echo 
echo "== Executing '"$( basename "$SCRIPT")"' =="

$SCRIPT "src=$SOURCE" "wrk=$DEST" "log=$LOGPATH" "ext=$EXT" $PARAM "name=$OUTPUT_NAME" "profile=a3$PROFILE_OPTIONS" "debug" "scantailor-verbose"

# ---- post-actions here!!!
